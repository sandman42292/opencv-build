name: CMake

on:
  push:
  pull_request:

jobs:
  build_mingw:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: ["Release", "RelWithDebInfo"]
        lib_type: ["Static", "Dynamic"]
        opencv_version: ["4.5.5"]

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: recursive

    - name: Setup environment
      run: |
          sudo apt-get -yq update
          sudo apt-get -yq install cmake ninja-build mingw-w64

    - name: Setup OpenCV
      run: |
          wget https://github.com/opencv/opencv/archive/refs/tags/${{matrix.opencv_version}}.zip --quiet
          unzip -q ${{matrix.opencv_version}}.zip -d ${{github.workspace}}

    - name: Build
      id: build
      run: |
          set -eux
          cd ${{github.workspace}}/opencv-${{matrix.opencv_version}}
          build_dir="${{github.workspace}}/opencv-${{matrix.opencv_version}}-build"
          cmake -B "$build_dir" -GNinja -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchain-mingw.cmake \
              -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -DBUILD_SHARED_LIBS=$(python2 -c "print 'ON' if '${{matrix.lib_type}}' == 'Dynamic' else 'OFF'") \
              -DBUILD_TESTS=OFF \
              -DBUILD_PERF_TESTS=OFF \
              -DBUILD_EXAMPLES=OFF \
              -DBUILD_opencv_apps=OFF\
          | tee cmake_log.txt
          RELEASE_BODY="$(awk '/General configuration for OpenCV/,/-----/' cmake_log.txt)"
          mkdir "$build_dir"
          cmake --build "$build_dir"
          cmake --install "$build_dir" --prefix ${{github.workspace}}/opencv-mingw-${{matrix.opencv_version}}
          cd ${{github.workspace}}
          zip -r opencv-mingw-${{matrix.opencv_version}}.zip opencv-mingw-${{matrix.opencv_version}}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        RELEASE_NAME: OpenCV-${{matrix.opencv_version}}-MinGW-${{matrix.lib_type}} (${{matrix.build_type}})
      with:
        tag_name: OpenCV-${{matrix.opencv_version}}-MinGW-${{matrix.lib_type}} (${{matrix.build_type}})
        release_name: ${{env.RELEASE_NAME}}
        body: ${{steps.build.outputs.RELEASE_BODY}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{github.workspace}}/opencv-mingw-${{matrix.opencv_version}}.zip
        asset_name: opencv-mingw-${{matrix.opencv_version}}.zip
        asset_content_type: application/zip
